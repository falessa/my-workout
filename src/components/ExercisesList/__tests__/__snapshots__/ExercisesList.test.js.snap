// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExercisesList tests Render ExercisesList 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
      "width": "85%",
    }
  }
>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    data={
      Array [
        Object {
          "kgs": "5",
          "name": "Squats",
          "repetitions": "12",
          "sets": "4",
        },
        Object {
          "kgs": "2",
          "name": "Pushups",
          "repetitions": "15",
          "sets": "3",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#eee",
              "borderRadius": 10,
              "flex": 1,
              "justifyContent": "center",
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 17,
                "fontWeight": "bold",
              }
            }
          >
            Squats
          </Text>
          <View
            style={
              Object {
                "alignContent": "center",
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 5,
              }
            }
          >
            <View
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            />
          </View>
        </View>
        <View
          style={
            Object {
              "height": 15,
            }
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#eee",
              "borderRadius": 10,
              "flex": 1,
              "justifyContent": "center",
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 17,
                "fontWeight": "bold",
              }
            }
          >
            Pushups
          </Text>
          <View
            style={
              Object {
                "alignContent": "center",
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 5,
              }
            }
          >
            <View
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            />
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
